import {
  Fragment,
  computed,
  createBaseVNode,
  createBlock,
  createElementBlock,
  createTextVNode,
  createVNode,
  defineComponent,
  normalizeClass,
  openBlock,
  ref,
  renderList,
  renderSlot,
  toDisplayString,
  watch,
  withCtx
} from "./chunk-3AP2XJR3.js";
import "./chunk-ZS7NZCD4.js";

// node_modules/@harv46/vue-table/dist/es.js
var M = (n, a) => {
  const e = n.__vccOpts || n;
  for (const [s, l] of a)
    e[s] = l;
  return e;
};
var T = {};
var D = {
  class: "inline-block h-8 w-8 animate-spin rounded-full border-2 border-solid border-current border-r-transparent align-[-0.125em] text-primary motion-reduce:animate-[spin_1.5s_linear_infinite]",
  role: "status"
};
var S = createBaseVNode("span", { class: "!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]" }, "Loading...", -1);
var z = [
  S
];
function E(n, a) {
  return openBlock(), createElementBlock("div", D, z);
}
var L = M(T, [["render", E]]);
var O = { class: "w-full text-sm text-left text-gray-500 dark:text-gray-400" };
var F = { class: "text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400" };
var q = { key: 0 };
var A = ["colspan"];
var G = { class: "flex justify-center p-4" };
var H = { key: 1 };
var I = { key: 0 };
var J = { key: 1 };
var K = defineComponent({
  __name: "VueTable",
  props: {
    headers: {},
    data: {},
    keys: {},
    dark: { type: Boolean, default: false },
    noDataMessage: { default: "No data available" },
    loading: { type: Boolean, default: false }
  },
  setup(n) {
    const a = (e, s) => s.reduce((l, g) => l == null ? void 0 : l[g], e);
    return (e, s) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(["relative overflow-x-auto shadow-md sm:rounded-lg", { dark: e.dark }])
    }, [
      createBaseVNode("table", O, [
        createBaseVNode("thead", F, [
          createBaseVNode("tr", null, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(e.headers, (l, g) => (openBlock(), createElementBlock("th", {
              key: g,
              scope: "col",
              class: "px-6 py-3"
            }, toDisplayString(l), 1))), 128)),
            renderSlot(e.$slots, "th")
          ])
        ]),
        createBaseVNode("tbody", null, [
          e.data.length < 1 ? (openBlock(), createElementBlock("tr", q, [
            createBaseVNode("td", {
              colspan: e.headers.length,
              class: "align-center"
            }, [
              createBaseVNode("div", G, [
                e.loading ? (openBlock(), createBlock(L, { key: 0 })) : (openBlock(), createElementBlock("p", H, toDisplayString(e.noDataMessage), 1))
              ])
            ], 8, A)
          ])) : (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(e.data, (l, g) => (openBlock(), createElementBlock("tr", {
            class: "bg-white border-b hover:bg-gray-50 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-600",
            key: g
          }, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(e.keys, (c, b) => (openBlock(), createElementBlock("td", {
              key: b,
              class: "px-6 py-4"
            }, [
              typeof c == "object" ? (openBlock(), createElementBlock("span", I, toDisplayString(a(l, c)), 1)) : (openBlock(), createElementBlock("span", J, toDisplayString(l[c]), 1))
            ]))), 128)),
            renderSlot(e.$slots, "td", { item: l })
          ]))), 128))
        ])
      ])
    ], 2));
  }
});
var Q = createBaseVNode("span", { class: "sr-only" }, "Previous", -1);
var R = createBaseVNode("path", {
  stroke: "currentColor",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  "stroke-width": "2",
  d: "M5 1 1 5l4 4"
}, null, -1);
var U = [
  R
];
var W = defineComponent({
  __name: "PreviousNavigation",
  props: {
    large: { type: Boolean, default: false }
  },
  setup(n) {
    return (a, e) => (openBlock(), createElementBlock("li", null, [
      createBaseVNode("button", {
        class: normalizeClass(["flex items-center justify-center ml-0 leading-tight text-gray-500 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white", [a.large ? "px-4 h-10" : "px-3 h-8"]])
      }, [
        Q,
        (openBlock(), createElementBlock("svg", {
          class: normalizeClass([a.large ? "w-3 h-3" : "w-2.5 h-2.5"]),
          "aria-hidden": "true",
          xmlns: "http://www.w3.org/2000/svg",
          fill: "none",
          viewBox: "0 0 6 10"
        }, U, 2))
      ], 2)
    ]));
  }
});
var X = createBaseVNode("span", { class: "sr-only" }, "Next", -1);
var Y = createBaseVNode("path", {
  stroke: "currentColor",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  "stroke-width": "2",
  d: "m1 9 4-4-4-4"
}, null, -1);
var Z = [
  Y
];
var ee = defineComponent({
  __name: "NextNavigation",
  props: {
    large: { type: Boolean, default: false }
  },
  setup(n) {
    return (a, e) => (openBlock(), createElementBlock("li", null, [
      createBaseVNode("button", {
        class: normalizeClass(["flex items-center justify-center leading-tight text-gray-500 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white", [a.large ? "px-4 h-10" : "px-3 h-8"]])
      }, [
        X,
        (openBlock(), createElementBlock("svg", {
          class: normalizeClass([a.large ? "w-3 h-3" : "w-2.5 h-2.5"]),
          "aria-hidden": "true",
          xmlns: "http://www.w3.org/2000/svg",
          fill: "none",
          viewBox: "0 0 6 10"
        }, Z, 2))
      ], 2)
    ]));
  }
});
var te = ["aria-current"];
var $ = defineComponent({
  __name: "PageNumber",
  props: {
    large: { type: Boolean, default: false },
    active: { type: Boolean, default: false }
  },
  setup(n) {
    return (a, e) => (openBlock(), createElementBlock("li", null, [
      createBaseVNode("button", {
        "aria-current": a.active ? "page" : void 0,
        class: normalizeClass(["flex items-center justify-center leading-tight", [
          a.large ? "px-4 h-10" : "px-3 h-8",
          a.active ? "z-10 text-blue-600 border border-blue-300 bg-blue-50 hover:bg-blue-100 hover:text-blue-700 dark:border-gray-700 dark:bg-gray-700 dark:text-white" : "text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
        ]])
      }, [
        renderSlot(a.$slots, "default")
      ], 10, te)
    ]));
  }
});
var re = defineComponent({
  __name: "VuePaginator",
  props: {
    large: { type: Boolean, default: false },
    dark: { type: Boolean, default: false },
    defaultPage: { default: 1 },
    bufferCount: { default: 2 },
    pageCount: { default: 5 }
  },
  emits: {
    onPageChange: (n) => $
  },
  setup(n, { emit: a }) {
    const e = n, s = ref(e.defaultPage);
    watch(s, (d) => a("onPageChange", d));
    const l = computed(() => {
      const d = e.bufferCount * 2, _ = Math.min(d, e.pageCount);
      let u = Math.max(s.value - _, 1);
      const m = Math.min(u + _, e.pageCount), x = [];
      for (let k = u; k <= m; k++)
        x.push(k);
      return x;
    });
    function g() {
      s.value != e.pageCount && s.value++;
    }
    function c() {
      s.value != 1 && s.value--;
    }
    function b(d) {
      s.value = d;
    }
    return (d, _) => (openBlock(), createElementBlock("nav", {
      "aria-label": "Page navigation",
      class: normalizeClass({ dark: d.dark })
    }, [
      createBaseVNode("ul", {
        class: normalizeClass(["flex items-center -space-x-px", [d.large ? "h-10 text-base" : "h-8 text-sm"]])
      }, [
        createVNode(W, {
          large: d.large,
          onClick: c
        }, null, 8, ["large"]),
        (openBlock(true), createElementBlock(Fragment, null, renderList(l.value, (u) => (openBlock(), createBlock($, {
          large: d.large,
          key: u,
          active: u === s.value,
          onClick: (m) => b(u)
        }, {
          default: withCtx(() => [
            createTextVNode(toDisplayString(u), 1)
          ]),
          _: 2
        }, 1032, ["large", "active", "onClick"]))), 128)),
        createVNode(ee, {
          large: d.large,
          onClick: g
        }, null, 8, ["large"])
      ], 2)
    ], 2));
  }
});
var oe = {
  install(n, a) {
    n.component("VueTable", K), n.component("VuePaginator", re);
  }
};
export {
  re as VuePaginator,
  K as VueTable,
  oe as default
};
//# sourceMappingURL=@harv46_vue-table.js.map
