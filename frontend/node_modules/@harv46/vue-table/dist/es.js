import { openBlock as t, createElementBlock as r, createElementVNode as o, defineComponent as p, normalizeClass as i, Fragment as f, renderList as y, toDisplayString as h, renderSlot as v, createBlock as C, ref as B, watch as P, computed as N, createVNode as w, withCtx as V, createTextVNode as j } from "vue";
const M = (n, a) => {
  const e = n.__vccOpts || n;
  for (const [s, l] of a)
    e[s] = l;
  return e;
}, T = {}, D = {
  class: "inline-block h-8 w-8 animate-spin rounded-full border-2 border-solid border-current border-r-transparent align-[-0.125em] text-primary motion-reduce:animate-[spin_1.5s_linear_infinite]",
  role: "status"
}, S = /* @__PURE__ */ o("span", { class: "!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]" }, "Loading...", -1), z = [
  S
];
function E(n, a) {
  return t(), r("div", D, z);
}
const L = /* @__PURE__ */ M(T, [["render", E]]), O = { class: "w-full text-sm text-left text-gray-500 dark:text-gray-400" }, F = { class: "text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400" }, q = { key: 0 }, A = ["colspan"], G = { class: "flex justify-center p-4" }, H = { key: 1 }, I = { key: 0 }, J = { key: 1 }, K = /* @__PURE__ */ p({
  __name: "VueTable",
  props: {
    headers: {},
    data: {},
    keys: {},
    dark: { type: Boolean, default: !1 },
    noDataMessage: { default: "No data available" },
    loading: { type: Boolean, default: !1 }
  },
  setup(n) {
    const a = (e, s) => s.reduce((l, g) => l == null ? void 0 : l[g], e);
    return (e, s) => (t(), r("div", {
      class: i(["relative overflow-x-auto shadow-md sm:rounded-lg", { dark: e.dark }])
    }, [
      o("table", O, [
        o("thead", F, [
          o("tr", null, [
            (t(!0), r(f, null, y(e.headers, (l, g) => (t(), r("th", {
              key: g,
              scope: "col",
              class: "px-6 py-3"
            }, h(l), 1))), 128)),
            v(e.$slots, "th")
          ])
        ]),
        o("tbody", null, [
          e.data.length < 1 ? (t(), r("tr", q, [
            o("td", {
              colspan: e.headers.length,
              class: "align-center"
            }, [
              o("div", G, [
                e.loading ? (t(), C(L, { key: 0 })) : (t(), r("p", H, h(e.noDataMessage), 1))
              ])
            ], 8, A)
          ])) : (t(!0), r(f, { key: 1 }, y(e.data, (l, g) => (t(), r("tr", {
            class: "bg-white border-b hover:bg-gray-50 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-600",
            key: g
          }, [
            (t(!0), r(f, null, y(e.keys, (c, b) => (t(), r("td", {
              key: b,
              class: "px-6 py-4"
            }, [
              typeof c == "object" ? (t(), r("span", I, h(a(l, c)), 1)) : (t(), r("span", J, h(l[c]), 1))
            ]))), 128)),
            v(e.$slots, "td", { item: l })
          ]))), 128))
        ])
      ])
    ], 2));
  }
}), Q = /* @__PURE__ */ o("span", { class: "sr-only" }, "Previous", -1), R = /* @__PURE__ */ o("path", {
  stroke: "currentColor",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  "stroke-width": "2",
  d: "M5 1 1 5l4 4"
}, null, -1), U = [
  R
], W = /* @__PURE__ */ p({
  __name: "PreviousNavigation",
  props: {
    large: { type: Boolean, default: !1 }
  },
  setup(n) {
    return (a, e) => (t(), r("li", null, [
      o("button", {
        class: i(["flex items-center justify-center ml-0 leading-tight text-gray-500 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white", [a.large ? "px-4 h-10" : "px-3 h-8"]])
      }, [
        Q,
        (t(), r("svg", {
          class: i([a.large ? "w-3 h-3" : "w-2.5 h-2.5"]),
          "aria-hidden": "true",
          xmlns: "http://www.w3.org/2000/svg",
          fill: "none",
          viewBox: "0 0 6 10"
        }, U, 2))
      ], 2)
    ]));
  }
}), X = /* @__PURE__ */ o("span", { class: "sr-only" }, "Next", -1), Y = /* @__PURE__ */ o("path", {
  stroke: "currentColor",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  "stroke-width": "2",
  d: "m1 9 4-4-4-4"
}, null, -1), Z = [
  Y
], ee = /* @__PURE__ */ p({
  __name: "NextNavigation",
  props: {
    large: { type: Boolean, default: !1 }
  },
  setup(n) {
    return (a, e) => (t(), r("li", null, [
      o("button", {
        class: i(["flex items-center justify-center leading-tight text-gray-500 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white", [a.large ? "px-4 h-10" : "px-3 h-8"]])
      }, [
        X,
        (t(), r("svg", {
          class: i([a.large ? "w-3 h-3" : "w-2.5 h-2.5"]),
          "aria-hidden": "true",
          xmlns: "http://www.w3.org/2000/svg",
          fill: "none",
          viewBox: "0 0 6 10"
        }, Z, 2))
      ], 2)
    ]));
  }
}), te = ["aria-current"], $ = /* @__PURE__ */ p({
  __name: "PageNumber",
  props: {
    large: { type: Boolean, default: !1 },
    active: { type: Boolean, default: !1 }
  },
  setup(n) {
    return (a, e) => (t(), r("li", null, [
      o("button", {
        "aria-current": a.active ? "page" : void 0,
        class: i(["flex items-center justify-center leading-tight", [
          a.large ? "px-4 h-10" : "px-3 h-8",
          a.active ? "z-10 text-blue-600 border border-blue-300 bg-blue-50 hover:bg-blue-100 hover:text-blue-700 dark:border-gray-700 dark:bg-gray-700 dark:text-white" : "text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"
        ]])
      }, [
        v(a.$slots, "default")
      ], 10, te)
    ]));
  }
}), re = /* @__PURE__ */ p({
  __name: "VuePaginator",
  props: {
    large: { type: Boolean, default: !1 },
    dark: { type: Boolean, default: !1 },
    defaultPage: { default: 1 },
    bufferCount: { default: 2 },
    pageCount: { default: 5 }
  },
  emits: {
    onPageChange: (n) => $
  },
  setup(n, { emit: a }) {
    const e = n, s = B(e.defaultPage);
    P(s, (d) => a("onPageChange", d));
    const l = N(() => {
      const d = e.bufferCount * 2, _ = Math.min(d, e.pageCount);
      let u = Math.max(s.value - _, 1);
      const m = Math.min(u + _, e.pageCount), x = [];
      for (let k = u; k <= m; k++)
        x.push(k);
      return x;
    });
    function g() {
      s.value != e.pageCount && s.value++;
    }
    function c() {
      s.value != 1 && s.value--;
    }
    function b(d) {
      s.value = d;
    }
    return (d, _) => (t(), r("nav", {
      "aria-label": "Page navigation",
      class: i({ dark: d.dark })
    }, [
      o("ul", {
        class: i(["flex items-center -space-x-px", [d.large ? "h-10 text-base" : "h-8 text-sm"]])
      }, [
        w(W, {
          large: d.large,
          onClick: c
        }, null, 8, ["large"]),
        (t(!0), r(f, null, y(l.value, (u) => (t(), C($, {
          large: d.large,
          key: u,
          active: u === s.value,
          onClick: (m) => b(u)
        }, {
          default: V(() => [
            j(h(u), 1)
          ]),
          _: 2
        }, 1032, ["large", "active", "onClick"]))), 128)),
        w(ee, {
          large: d.large,
          onClick: g
        }, null, 8, ["large"])
      ], 2)
    ], 2));
  }
});
const oe = {
  install(n, a) {
    n.component("VueTable", K), n.component("VuePaginator", re);
  }
};
export {
  re as VuePaginator,
  K as VueTable,
  oe as default
};
